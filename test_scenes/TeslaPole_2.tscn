[gd_scene load_steps=5 format=2]

[ext_resource path="res://assets/graphics/Tower_half_1.png" type="Texture" id=1]

[sub_resource type="GDScript" id=3]
script/source = "extends Node2D

var tower_active = false


func _process(delta: float) -> void:
	if $\"/root/Global\".lightning_weapon_active and tower_active:
		$AnimationPlayer.stop()
		$RestartTimer.start()
		

func _on_RestartTimer_timeout() -> void:
	$AnimationPlayer.play(\"glow\")


func _on_VisibilityEnabler2D_screen_entered() -> void:
	tower_active = true
	$AnimationPlayer.play(\"glow\")


func _on_VisibilityEnabler2D_screen_exited() -> void:
	tower_active = false
	$AnimationPlayer.stop()
"

[sub_resource type="Animation" id=1]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=2]
resource_name = "glow"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 0.00784314, 0.00784314, 1 ), Color( 1, 1, 1, 1 ) ]
}

[node name="TeslaPole" type="Node2D"]
script = SubResource( 3 )

[node name="Sprite" type="Sprite" parent="."]
scale = Vector2( 0.3, 0.7 )
texture = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 1 )
anims/glow = SubResource( 2 )

[node name="RestartTimer" type="Timer" parent="."]
wait_time = 5.0

[node name="VisibilityEnabler2D" type="VisibilityEnabler2D" parent="."]

[connection signal="timeout" from="RestartTimer" to="." method="_on_RestartTimer_timeout"]
[connection signal="screen_entered" from="VisibilityEnabler2D" to="." method="_on_VisibilityEnabler2D_screen_entered"]
[connection signal="screen_exited" from="VisibilityEnabler2D" to="." method="_on_VisibilityEnabler2D_screen_exited"]
