[gd_scene load_steps=28 format=2]

[ext_resource path="res://assets/animations/mini_spark/spark_06.png" type="Texture" id=1]
[ext_resource path="res://assets/animations/mini_spark/spark_05.png" type="Texture" id=2]
[ext_resource path="res://scripts/Lightnings.gd" type="Script" id=3]
[ext_resource path="res://assets/graphics/tesla_emitter3.png" type="Texture" id=4]
[ext_resource path="res://assets/animations/Explosion.png" type="Texture" id=6]
[ext_resource path="res://assets/animations/new_space_mines/spark_01.png" type="Texture" id=7]
[ext_resource path="res://assets/animations/new_space_mines/spark_04.png" type="Texture" id=8]
[ext_resource path="res://assets/animations/new_space_mines/spark_03.png" type="Texture" id=9]
[ext_resource path="res://assets/animations/new_space_mines/spark_02.png" type="Texture" id=10]

[sub_resource type="GDScript" id=19]
script/source = "extends KinematicBody2D

var navagent : NavigationAgent2D
var target_position

var rotating_speed = 0.05

var this_enemy_on_screen = true
var this_enemy_shot = false

var move_up_complete = false # enemy will move up (relative to its spawn point) for 2 seconds before the path-finding/ player-hunting script begins

onready var the_player = get_tree().get_nodes_in_group(\"player\")[0]

var lightning_strikes_against = 0
var is_staggered = false

func _ready():
	navagent = $NavigationAgent2D
	navagent.connect(\"velocity_computed\", self, \"_on_velocity_computed\")
	$NavTimer.start()
	$Anim_sparky.play(\"sparky\")
	$move_up_timer.start()

	
func _physics_process(delta):
	if $\"/root/Global\".lightning_weapon_active and !is_staggered and move_up_complete:
		lightning_strikes_against += 1
		if lightning_strikes_against >= 2:
			_on_ExtinctionTimer_timeout()
		else:
			if move_up_complete:
				is_staggered = true
				$StaggerTimer.start()
			return
			
	if is_staggered:
		rotation += rotating_speed / (lightning_strikes_against * 1.5)
		return	
	if !move_up_complete:
		position.y -= 0.25
		return
	if navagent.is_navigation_finished():
		return
	var target_position = navagent.get_next_location()
	var direction = global_position.direction_to(target_position)
	var velocity = direction * navagent.max_speed	
	move_and_slide(velocity)
	$Anim_sparky.rotation_degrees += 0.25
	if $Anim_sparky.rotation_degrees >= 360:
		$Anim_sparky.rotation_degrees = 0
	$Lightnings.rotation_degrees += rotating_speed
	if $Lightnings.rotation_degrees >= 360:
		$Lightnings.rotation_degrees = 0


func _on_ExtinctionTimer_timeout():
	if $\"/root/Global\".lightning_weapon_active and !this_enemy_on_screen:
		return
#	if lightning_strikes_against <= 1:
#		return
	$Anim_sparky.scale.x *= 3
	$Anim_sparky.scale.y *= 3	
	$explosion.visible = true
#	$AnimatedSprite.visible = false
	$explosion.play(\"explode\")
	$Lightnings.visible = false
	$Sprite.visible = false
	$Sprite2.visible = false
	# work out how far away exploding mine is from player
	# and inflict damage if player within blast radius
	if !this_enemy_shot:
		var player_position = the_player.global_position
		var mine_position = global_transform.origin
		var distance_from_player = player_position.distance_to(mine_position)
		if distance_from_player <= 175 and !$\"/root/Global\".lightning_weapon_active:
			# _____________________^^^ this
			# is the value for when the explosion affects the player
			$\"/root/Global\".taking_damage = true
	yield($explosion, \"animation_finished\")
	# calc random value for damage based on proximity
	if $\"/root/Global\".taking_damage and !this_enemy_shot:
		$\"/root/Global\".player_damaged(3)
	queue_free()
	

func _on_NavTimer_timeout() -> void:
	var player_position = the_player.global_position
	navagent.set_target_location(player_position)
	$NavTimer.start()
	
func _on_Area2D_body_entered(body):
	if body.name == 'Bullet':
		this_enemy_shot = true
		_on_ExtinctionTimer_timeout()
	if body.name == \"player\":
		navagent.max_speed *= 4
		rotating_speed *= 4
		$DelayTimer.start()
		
		
func _on_DelayTimer_timeout():
	lightning_strikes_against = 2
	_on_ExtinctionTimer_timeout()


func _on_move_up_timer_timeout():
#	$Lightnings/AnimatedSprite.play(\"star_enemy\")
	$Area2D.monitoring = true
	navagent.max_speed *= 2
	move_up_complete = true


func _on_VisibilityNotifier2D_screen_exited():
	this_enemy_on_screen = false


func _on_VisibilityNotifier2D_screen_entered():
	this_enemy_on_screen = true


func _on_StaggerTimer_timeout() -> void:
	is_staggered = false


func _on_Area2D_area_entered(area):
	pass
#	if area.name == \"Bullet\" and move_up_complete:
#		this_enemy_shot = true
#		_on_ExtinctionTimer_timeout()
"

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ ExtResource( 2 ), ExtResource( 1 ) ],
"loop": true,
"name": "star_enemy",
"speed": 10.0
} ]

[sub_resource type="CircleShape2D" id=16]
radius = 20.025

[sub_resource type="AtlasTexture" id=3]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 0, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=4]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 96, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=5]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 192, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=6]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 288, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=7]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 384, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=8]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 480, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=9]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 576, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=10]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 672, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=11]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 768, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=12]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 864, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=13]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 960, 0, 96, 96 )

[sub_resource type="AtlasTexture" id=14]
flags = 4
atlas = ExtResource( 6 )
region = Rect2( 1056, 0, 96, 96 )

[sub_resource type="SpriteFrames" id=15]
animations = [ {
"frames": [ SubResource( 3 ), SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ), SubResource( 8 ), SubResource( 9 ), SubResource( 10 ), SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ) ],
"loop": true,
"name": "explode",
"speed": 15.0
} ]

[sub_resource type="CircleShape2D" id=17]
radius = 232.002

[sub_resource type="SpriteFrames" id=18]
animations = [ {
"frames": [ ExtResource( 7 ), ExtResource( 10 ), ExtResource( 9 ), ExtResource( 8 ) ],
"loop": true,
"name": "sparky",
"speed": 10.0
} ]

[node name="Enemy1" type="KinematicBody2D" groups=["enemy"]]
modulate = Color( 0, 0.576471, 1, 1 )
scale = Vector2( 0.3, 0.3 )
z_index = -20
z_as_relative = false
collision_layer = 3
collision_mask = 3
script = SubResource( 19 )

[node name="Sprite" type="Sprite" parent="."]
modulate = Color( 0.662745, 0.94902, 0.0470588, 1 )
position = Vector2( -33.3333, 6.66666 )
scale = Vector2( 4, 4 )
z_index = 10
texture = ExtResource( 4 )

[node name="Sprite2" type="Sprite" parent="."]
modulate = Color( 0.662745, 0.94902, 0.0470588, 1 )
position = Vector2( 53.3333, 6.66666 )
scale = Vector2( 4, 4 )
z_index = 10
texture = ExtResource( 4 )

[node name="Lightnings" type="Node2D" parent="."]
script = ExtResource( 3 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="Lightnings"]
self_modulate = Color( 0.172549, 0.937255, 0.0627451, 1 )
frames = SubResource( 1 )
animation = "star_enemy"
frame = 1
playing = true

[node name="AnimatedSprite2" type="AnimatedSprite" parent="Lightnings"]
self_modulate = Color( 0.172549, 0.937255, 0.0627451, 1 )
rotation = 0.806299
frames = SubResource( 1 )
animation = "star_enemy"
playing = true

[node name="AnimatedSprite3" type="AnimatedSprite" parent="Lightnings"]
self_modulate = Color( 0.172549, 0.937255, 0.0627451, 1 )
rotation = 1.62762
frames = SubResource( 1 )
animation = "star_enemy"
playing = true

[node name="AnimatedSprite4" type="AnimatedSprite" parent="Lightnings"]
self_modulate = Color( 0.172549, 0.937255, 0.0627451, 1 )
rotation = 2.39837
frames = SubResource( 1 )
animation = "star_enemy"
frame = 1
playing = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -1, -1 )
shape = SubResource( 16 )

[node name="ExtinctionTimer" type="Timer" parent="."]
wait_time = 50.0
one_shot = true
autostart = true

[node name="explosion" type="AnimatedSprite" parent="."]
visible = false
self_modulate = Color( 0.576471, 0.941176, 0.533333, 1 )
scale = Vector2( 11, 11 )
frames = SubResource( 15 )
animation = "explode"

[node name="NavigationAgent2D" type="NavigationAgent2D" parent="."]
avoidance_enabled = true
max_speed = 55.0

[node name="NavTimer" type="Timer" parent="."]
wait_time = 0.408

[node name="Area2D" type="Area2D" parent="."]
collision_layer = 2
collision_mask = 2
monitoring = false

[node name="ExplodeCollisionShape" type="CollisionShape2D" parent="Area2D"]
position = Vector2( -1, -1 )
shape = SubResource( 17 )

[node name="DelayTimer" type="Timer" parent="."]
wait_time = 1.3
one_shot = true

[node name="move_up_timer" type="Timer" parent="."]
wait_time = 5.0
one_shot = true

[node name="Anim_sparky" type="AnimatedSprite" parent="."]
visible = false
modulate = Color( 0.776471, 0.952941, 0.0431373, 1 )
scale = Vector2( 0.16, 0.16 )
frames = SubResource( 18 )
animation = "sparky"
playing = true

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="."]
visible = false
position = Vector2( 1.5, 1 )
scale = Vector2( 3.65, 3.7 )

[node name="StaggerTimer" type="Timer" parent="."]
wait_time = 5.0
one_shot = true

[connection signal="timeout" from="ExtinctionTimer" to="." method="_on_ExtinctionTimer_timeout"]
[connection signal="timeout" from="NavTimer" to="." method="_on_NavTimer_timeout"]
[connection signal="area_entered" from="Area2D" to="." method="_on_Area2D_area_entered"]
[connection signal="body_entered" from="Area2D" to="." method="_on_Area2D_body_entered"]
[connection signal="timeout" from="DelayTimer" to="." method="_on_DelayTimer_timeout"]
[connection signal="timeout" from="move_up_timer" to="." method="_on_move_up_timer_timeout"]
[connection signal="screen_entered" from="VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_entered"]
[connection signal="screen_exited" from="VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_exited"]
[connection signal="timeout" from="StaggerTimer" to="." method="_on_StaggerTimer_timeout"]
